version: '3.8'

services:
  tests:
    build:
      context: .
      dockerfile: Dockerfile-postgresql
    command: >
      sh -c "
        rm -f /tmp/test_finished.lock &&
        sh /scripts/run_tests.sh &&
        touch /tmp/test_finished.lock
      "
    user: root
    env_file:
      - .env_postgresql
    volumes:
      - ./django:/property_rental
      - test-lock:/tmp
    restart: "no"

  postgresql:
    container_name: postgresql
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - ./volumes/postgresql_data:/var/lib/postgresql/data/
      - test-lock:/tmp
    env_file:
      - .env_postgresql
    depends_on:
      - tests
    restart: "no"
    entrypoint: ["sh", "-c", "while [ ! -f /tmp/test_finished.lock ]; do echo 'Aguardando testes...'; sleep 50; done; echo 'Testes concluÃ­dos, iniciando PostgreSQL' && exec docker-entrypoint.sh postgres"]

  django:
    build:
      context: .
      dockerfile: Dockerfile-postgresql
    ports:
      - "8000:8000"
    volumes:
      - ./django:/property_rental
      - test-lock:/tmp
    command: >
      sh -c "
        sh /scripts/wait_for_db.sh &&
        sh /scripts/collect_static.sh &&
        sh /scripts/migrate.sh &&
        sh /scripts/run_server.sh
      "
    user: root
    env_file:
      - .env_postgresql
    depends_on:
      - tests
      - postgresql
    restart: "no"

volumes:
  test-lock: